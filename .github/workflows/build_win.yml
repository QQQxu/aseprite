name: One-Click Windows PR Build

on:
  workflow_dispatch: # 手动触发，PR 页面会显示按钮

jobs:
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
      UI_MODE: gui
      SCRIPTING_MODE: lua

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
          submodules: 'recursive'

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - uses: aseprite/get-ninja@main

      - name: Prepare Skia (if GUI)
        if: env.UI_MODE == 'gui'
        shell: bash
        run: |
          if [[ -f "${GITHUB_WORKSPACE}/laf/misc/skia-url.sh" ]]; then
            this_dir=$(cygpath "${GITHUB_WORKSPACE}")
            skia_url=$(source "$this_dir/laf/misc/skia-url.sh" | xargs)
            skia_file=$(basename "$skia_url")
            curl --ssl-revoke-best-effort -L -o "$skia_file" "$skia_url"
            unzip "$skia_file" -d skia
          fi

      - name: Generate build files
        shell: bash
        run: |
          enable_ccache=off
          if [[ "$UI_MODE" == "gui" ]]; then laf_backend=skia; else laf_backend=none; fi
          if [[ "$SCRIPTING_MODE" == "lua" ]]; then enable_scripting=on; else enable_scripting=off; fi
          skia_arch=x64

          cmake -S . -B build -G "Ninja" \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
            -DENABLE_SCRIPTING=$enable_scripting \
            -DENABLE_CCACHE=$enable_ccache \
            -DLAF_BACKEND=$laf_backend \
            -DSKIA_DIR=$(realpath skia) \
            -DSKIA_LIBRARY_DIR=$(realpath skia/out/Release-$skia_arch || true)

      - name: Compile
        shell: bash
        run: cd build && ninja -v

      - name: Package exe into zip
        shell: bash
        run: |
          mkdir -p artifacts
          PR_NUM="${{ github.event.pull_request.number || 'manual' }}"
          TS=$(date +'%Y%m%d-%H%M%S')
          ZIP_NAME="build-pr${PR_NUM}-${TS}.zip"

          # 找出所有 exe 并压缩
          find build -type f -iname '*.exe' -exec cp {} artifacts/ \;
          cd artifacts
          7z a "$ZIP_NAME" *.exe
          mv "$ZIP_NAME" ../

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build-zip
          path: build-pr*.zip
